<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on </title>
    <link>/tags/c#/</link>
    <description>Recent content in C# on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <lastBuildDate>Sun, 26 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>#12. Ввод и вывод в консольном приложении</title>
      <link>/post/day-12/</link>
      <pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-12/</guid>
      
        <description>&lt;p&gt;Иногда, например для научных расчетов, требуется организовать какой-нибудь самый простой ввод данных, выполнить, м.б., весьма сложную математическую обработку введенных данных и оперативно вывести на экран результат вычислений. Такая же ситуация возникает и тогда, когда большая программа отлаживается по частям. И для отладки вычислительной части совершенно не важен сервис при вводе данных.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#11. Вывод греческих букв, символов мат.операторов. Кодовая таблица Unicode</title>
      <link>/post/day-11/</link>
      <pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-11/</guid>
      
        <description>&lt;h3 id=&#34;немного-ликбеза&#34;&gt;Немного ликбеза&lt;/h3&gt;
&lt;p&gt;Хранение текстовых данных в памяти ЭВМ предполагает кодирование символов по какому-либо принципу. Таких кодировок несколько. Каждой кодировке соответствует своя таблица символов. В таких таблицах каждой ячейке соответствует номер в таблице и символ. Мы упомянем кодовые таблицы: ASCII, ANSI Cyrillic (другое название этой таблицы – Windows 1251), а также Unicode.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#10. Калькулятор на основе комбинированного списка ComboBox</title>
      <link>/post/day-10/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-10/</guid>
      
        <description>&lt;p&gt;Элемент управления &lt;strong&gt;ComboBox&lt;/strong&gt; служит для отображения вариантов выбора в раскрывающемся списке. Чтобы увидеть работу этого элемента управления, напишем программу, реализующей функции калькулятора. Здесь для отображения вариантов выбора арифметических операций используется комбинированный список ComboBox.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#9. Свойство Visible и всплывающая подсказка ToolTip</title>
      <link>/post/day-9/</link>
      <pubDate>Thu, 23 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-9/</guid>
      
        <description>&lt;p&gt;Рассмотрим возможности свойства Visible. Программа пишет в метку Label некоторый текст, а пользователь с помощью кнопки делает этот текст невидимым, а затем опять видимым и т.д. При зависании мыши над кнопкой появляется всплывающая подсказка “Нажми меня”.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#8. Вкладки TabControl и переключатели RadioButton</title>
      <link>/post/day-8/</link>
      <pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-8/</guid>
      
        <description>&lt;p&gt;Вкладки программируют для организации управления и оптимального использования экранного пространства. Выразительным примером применения вкладок является окно веб-браузера Chrome или Firefox. То есть, если требуется отобразить большое количество управляемой информации, уместно обратить внимание на вкладки &lt;strong&gt;TabControl&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#7. Побитовый оператор &#39;исключающее ИЛИ&#39;</title>
      <link>/post/day-7/</link>
      <pubDate>Tue, 21 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-7/</guid>
      
        <description>&lt;p&gt;Немного изменим предыдущую программу в части обработки события &lt;strong&gt;CheckedChanged&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#6. Управление стилем шрифта с помощью элемента управления CheckBox</title>
      <link>/post/day-6/</link>
      <pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-6/</guid>
      
        <description>&lt;p&gt;Кнопка &lt;strong&gt;CheckBox&lt;/strong&gt; (Флажок) также находится на панели элементов управления Toolbox. Флажок может быть либо установлен (содержит “галочку”), либо сброшен (пустой). Напишем программу, которая управляет стилем шрифта текста, выведенного на метку Label. Управлять стилем будем посредством флажки CheckBox.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#5. Ввод пароля в текстовое поле и изменение шрифта</title>
      <link>/post/day-5/</link>
      <pubDate>Sun, 19 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-5/</guid>
      
        <description>&lt;p&gt;Это очень маленькая программа для ввода пароля в текстовое поле, причем при вводе вместо вводимых символов увидим только звездочки.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#4. Ввод данных через текстовое поле TextBox с проверкой типа методом TryParse</title>
      <link>/post/day-4/</link>
      <pubDate>Sat, 18 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-4/</guid>
      
        <description>&lt;p&gt;При работе с формой очень часто ввод данных организуют через элемент управления TextBox (текстовое поле). Напишем типичную программу, которая вводит через текстовое поле число, при нажатии на кнопку извлекает из него квадратный корень и выводит результат на метку Label. В случае, если введено не число, сообщает об этом пользователю.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#3. Выбор нужной даты</title>
      <link>/post/day-3/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-3/</guid>
      
        <description>&lt;p&gt;Условие следующей нашей задачи состоит в том, чтобы, например, при заказе железнодорожных билетов или при регистрации в качестве отдыхающего в санатории при щелчке на соответствующем элементе управления появлялся бы календарь, из которого можно было бы выбрать необходимую дату. Это может быть дата отправления поезда, или дата окончания отдыха в санатории.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#2. Событие MouseHover</title>
      <link>/post/day-2/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-2/</guid>
      
        <description>&lt;p&gt;Немного усложним задачу предыдущего примера. Добавим для объекта Label1 обработку еще одного события – &lt;strong&gt;MouseHover&lt;/strong&gt;. Событие MouseHover наступает, когда пользователь курсором мыши “зависает” над каким-либо объектом (от англ. hover – реять, парить), а не просто проводит мышью над объектом. Можно сказать также, что событие MouseHover происходит, когда курсор мыши наведен на элемент.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>#1. Первая программа</title>
      <link>/post/day-1/</link>
      <pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/day-1/</guid>
      
        <description>&lt;h4 id=&#34;предисловие&#34;&gt;Предисловие&lt;/h4&gt;
&lt;p&gt;Запускаю цикл конспектов своих занятий “Дни с C#”. Как известно, теорию надо подкреплять практикой. В данном цикле “Дни с C#” рассматриваются более 100 типичных примеров: обработка событий мыши и клавиатуры, чтение/запись файлов, редактирование графических данных, управление буфером обмена, ввод/вывод данных, создание PDF-файлов и многое другое. Все эти примеры выкладываются по мере пополнения в репозиторий “Examples with CSharp” на &lt;a href=&#34;https://github.com/GhostBasenji/Examples-with-Csharp&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>